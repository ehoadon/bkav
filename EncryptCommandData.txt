public static string EncryptCommandData(string plainText, string partnerToken)
{
    var parts = partnerToken.Split(':');
    if (parts.Length != 2)
        throw new ArgumentException("PartnerToken không hợp lệ (phải có dạng base64key:base64iv)");

    byte[] key = Convert.FromBase64String(parts[0]);
    byte[] iv = Convert.FromBase64String(parts[1]);

    byte[] compressedData;

    byte[] data = Encoding.UTF8.GetBytes(plainText);
    using MemoryStream src = new MemoryStream(data);
    using MemoryStream memoryStream = new MemoryStream();
    using (GZipStream dest = new GZipStream(memoryStream, CompressionMode.Compress))
    {
        byte[] buffer = new byte[8192];
        int count;
        while ((count = src.Read(buffer, 0, buffer.Length)) != 0)
        {
            dest.Write(buffer, 0, count);
        }
    }

    compressedData = memoryStream.ToArray();


    using var aes = Aes.Create();
    aes.KeySize = 256;
    aes.BlockSize = 128;
    aes.Key = key;
    aes.IV = iv;
    aes.Mode = CipherMode.CBC;
    aes.Padding = PaddingMode.PKCS7;

    using var encryptor = aes.CreateEncryptor(aes.Key, aes.IV);
    byte[] encrypted;
    using (var ms = new MemoryStream())
    {
        using (var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))
        {
            cs.Write(compressedData, 0, compressedData.Length);
            //cs.FlushFinalBlock();
            ms.Flush();
            //ms.Position = 0;
        }
        encrypted = ms.ToArray();
    }
    return Convert.ToBase64String(encrypted);
}